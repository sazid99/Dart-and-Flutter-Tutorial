ডার্টের বেসিক থেকে এডভান্স টপিক পর্যন্ত **৫০টি প্র্যাক্টিস প্রোগ্রামের** তালিকা নিচে দেওয়া হলো:  

---

### **১. ভেরিয়েবল ও ডেটা টাইপস**  
1. একটি সংখ্যা যোগ, বিয়োগ, গুণ, ভাগ করুন।  
2. ইউজারের নাম এবং বয়স নিয়ে একটি গ্রীটিং প্রিন্ট করুন।  
3. একটি `List` থেকে সর্বোচ্চ এবং সর্বনিম্ন মান বের করুন।  
4. একটি `Map` থেকে নির্দিষ্ট কী-এর মান বের করুন।  
5. দুটি সংখ্যা অদলবদল করুন।  
6. `var` এবং `dynamic` ব্যবহার করে ডেটা টাইপ পরিবর্তন করুন।  

---

### **২. কন্ডিশনাল স্টেটমেন্টস**  
7. একটি সংখ্যা জোড় নাকি বিজোড় তা চেক করুন।  
8. কোনো সংখ্যা পজিটিভ, নেগেটিভ নাকি জিরো তা চেক করুন।  
9. একটি `switch-case` দিয়ে সপ্তাহের দিন প্রিন্ট করুন।  
10. স্টুডেন্টের নম্বর নিয়ে গ্রেড নির্ধারণ করুন।  
11. একটি সংখ্যা প্রাইম কিনা তা চেক করুন।  

---

### **৩. লুপিং স্ট্রাকচার**  
12. ১ থেকে ১০ পর্যন্ত সংখ্যার যোগফল বের করুন।  
13. একটি সংখ্যার মাল্টিপ্লিকেশন টেবিল প্রিন্ট করুন।  
14. একটি `List` এর সব নাম প্রিন্ট করুন।  
15. একটি লিস্ট থেকে শুধু বিজোড় সংখ্যা প্রিন্ট করুন।  
16. `forEach` ব্যবহার করে একটি লিস্টকে আপারকেসে রূপান্তর করুন।  
17. একটি সংখ্যা `factorial` বের করুন।  
18. একটি পিরামিড প্যাটার্ন প্রিন্ট করুন।  

---

### **৪. ফাংশন (Functions)**  
19. দুটি সংখ্যা যোগ করার জন্য একটি ফাংশন তৈরি করুন।  
20. অপশনাল প্যারামিটার সহ একটি ফাংশন তৈরি করুন।  
21. রিকার্সিভ ফাংশন দিয়ে ফ্যাক্টোরিয়াল বের করুন।  
22. ডিফল্ট প্যারামিটার ব্যবহার করে একটি ফাংশন তৈরি করুন।  
23. একটি ফাংশন দিয়ে অ্যারেতে সর্বোচ্চ মান বের করুন।  

---

### **৫. ক্লাস ও অবজেক্টস**  
24. একটি `Person` ক্লাস তৈরি করে নাম এবং বয়স সেট করুন।  
25. একটি কনস্ট্রাক্টর ব্যবহার করে অবজেক্ট ইনিশিয়ালাইজ করুন।  
26. ইনহেরিটেন্স ব্যবহার করে দুটি ক্লাস তৈরি করুন।  
27. একটি ক্লাসে স্ট্যাটিক ফিল্ড এবং মেথড যুক্ত করুন।  
28. গেটার এবং সেটার ফাংশন তৈরি করুন।  
29. দুটি অবজেক্ট তুলনা করার জন্য `==` অপারেটর ওভারলোড করুন।  

---

### **৬. ইরর হ্যান্ডলিং**  
30. একটি প্রোগ্রামে ডিভিশন বাই জিরো হ্যান্ডেল করুন।  
31. `throw` ব্যবহার করে একটি কাস্টম এক্সেপশন তৈরি করুন।  
32. একটি প্রোগ্রামে `try-catch` ব্যবহার করুন যেখানে একটি API কল সিমুলেট করা হবে।  

---

### **৭. নাল সেফটি (Null Safety)**  
33. একটি ভেরিয়েবল নাল চেক করে প্রিন্ট করুন।  
34. `!` ব্যবহার করে একটি নাল সেফ অপারেশন করুন।  
35. `late` কিওয়ার্ড ব্যবহার করে ভেরিয়েবল ইনিশিয়ালাইজ করুন।  

---

### **৮. অ্যাসিঙ্ক্রোনাস প্রোগ্রামিং**  
36. `Future` ব্যবহার করে একটি ডেটা ফেচ সিমুলেশন তৈরি করুন।  
37. `async-await` দিয়ে একটি প্রোগ্রাম তৈরি করুন।  
38. একটি `Stream` ব্যবহার করে ডেটা প্রিন্ট করুন।  
39. একটি টাইমার প্রোগ্রাম তৈরি করুন যা প্রতি সেকেন্ডে সংখ্যা প্রিন্ট করবে।  

---

### **৯. প্যাকেজ ও লাইব্রেরি ব্যবহার**  
40. `intl` প্যাকেজ দিয়ে বর্তমান তারিখ ফরম্যাট করুন।  
41. `http` প্যাকেজ ব্যবহার করে ডেটা ফেচ সিমুলেট করুন।  
42. `path` প্যাকেজ দিয়ে একটি ফাইলপাথ ম্যানেজ করুন।  
43. একটি `json` ফাইল লোড এবং প্রিন্ট করুন।  

---

### **১০. অ্যাডভান্সড টপিকস**  
44. একটি মিক্সিন তৈরি করুন এবং এটি একটি ক্লাসে ব্যবহার করুন।  
45. একটি ফাংশন দিয়ে জেনেরিক টাইপ চেক করুন।  
46. মাল্টি-থ্রেডিং এর জন্য `Isolate` ব্যবহার করুন।  
47. একটি কাস্টম এনাম তৈরি করুন এবং এটি প্রিন্ট করুন।  
48. ডার্টের স্ট্রিম ব্যবহার করে একটি রিয়েল-টাইম কাউন্টার তৈরি করুন।  
49. কাস্টম অপারেটর ওভারলোডিং করে দুটি ক্লাসের মান যোগ করুন।  
50. একটি ব্যাকএন্ড সার্ভার তৈরি করতে `shelf` প্যাকেজ ব্যবহার করুন।  

---
######################################################################################################################################################################
###################################################################################################################################################################
################################################################################################################################################################

### **৫০টি প্র্যাকটিস সমস্যা (ডার্টের এডভান্সড টপিক নিয়ে)**  

---

#### **১. জেনেরিক্স (Generics)**  
1. একটি `List<T>` তৈরি করুন যা `T` এর যেকোনো টাইপ গ্রহণ করতে পারে এবং মান যোগ করে।  
2. একটি জেনেরিক ক্লাস তৈরি করুন যা একটি সংখ্যা যোগ এবং বিয়োগ করতে পারে।  
3. `Map<K, V>` ব্যবহার করে কাস্টম টাইপ ম্যাপিং তৈরি করুন।  
4. একটি ফাংশন লিখুন যা জেনেরিক প্যারামিটার ব্যবহার করে ডেটা রিটার্ন করে।  
5. একটি লিস্ট থেকে শুধুমাত্র নির্দিষ্ট টাইপের ডেটা ফিল্টার করুন।  

---

#### **২. মিক্সিনস (Mixins)**  
6. দুটি মিক্সিন ক্লাস তৈরি করুন এবং একটি ক্লাসে তাদের `with` ব্যবহার করুন।  
7. `Mixin` দিয়ে একটি `Shape` ক্লাসের জন্য সাধারণ ফাংশনালিটি যোগ করুন।  
8. মিক্সিন ব্যবহার করে `Animal` এবং `Bird` এর কিছু সাধারণ বৈশিষ্ট্য যোগ করুন।  
9. কোড পুনর্ব্যবহারযোগ্য করতে একটি `Logger` মিক্সিন যোগ করুন।  
10. মিক্সিন দিয়ে একটি প্রোগ্রামে বহুমাত্রিক ইনহেরিটেন্স দেখান।  

---

#### **৩. এক্সটেনশন মেথডস (Extension Methods)**  
11. একটি এক্সটেনশন তৈরি করুন যা `String` এ একটি নতুন মেথড যোগ করবে।  
12. একটি `List`-এ সর্বোচ্চ মান বের করার জন্য এক্সটেনশন মেথড ব্যবহার করুন।  
13. `int` টাইপে একটি মেথড যোগ করুন যা এটি দ্বিগুণ করবে।  
14. একটি এক্সটেনশন তৈরি করুন যা `bool` কে বিপরীত মান দিবে।  
15. বিদ্যমান `DateTime` ক্লাসে একটি নতুন মেথড যোগ করুন।  

---

#### **৪. OOP (অবজেক্ট অরিয়েন্টেড প্রোগ্রামিং)**  
16. একটি অ্যাবস্ট্রাক্ট ক্লাস `Vehicle` তৈরি করুন এবং তা ইনহেরিট করে দুটি ক্লাস তৈরি করুন।  
17. `Polymorphism` দেখানোর জন্য একটি প্রোগ্রাম লিখুন।  
18. একটি `interface` তৈরি করুন যা `Readable` এবং `Writable` মেথড ইমপ্লিমেন্ট করবে।  
19. কনস্ট্রাক্টর চেইনিং ব্যবহার করে একটি ক্লাস তৈরি করুন।  
20. `override` ব্যবহার করে একটি বেস ক্লাস থেকে ডেরাইভড ক্লাসের মেথড পরিবর্তন করুন।  

---

#### **৫. ফাংশনাল প্রোগ্রামিং প্যারাডাইম**  
21. একটি ল্যাম্বডা ফাংশন লিখুন যা দুটি সংখ্যার যোগফল দেয়।  
22. একটি ক্লোজার তৈরি করুন যা একটি ভেরিয়েবল ধরে রাখবে।  
23. `map()` ফাংশন ব্যবহার করে একটি লিস্টকে দ্বিগুণ করুন।  
24. `reduce()` ব্যবহার করে একটি লিস্টের যোগফল বের করুন।  
25. একটি হায়ার অর্ডার ফাংশন তৈরি করুন যা অন্য একটি ফাংশনকে প্যারামিটার হিসেবে গ্রহণ করবে।  

---

#### **৬. ইরর ও এক্সেপশন হ্যান্ডলিং (Custom Exceptions)**  
26. একটি কাস্টম এক্সেপশন তৈরি করুন এবং একটি প্রোগ্রামে তা থ্রো করুন।  
27. `try-catch` ব্যবহার করে একটি ফাইল না থাকলে তা হ্যান্ডেল করুন।  
28. `finally` ব্লক ব্যবহার করে একটি প্রোগ্রামে ক্লিনআপ করুন।  
29. একটি অ্যাপ্লিকেশন ক্র্যাশ হওয়া এড়ানোর জন্য ডিফল্ট এক্সেপশন হ্যান্ডলার ব্যবহার করুন।  
30. `assert` ব্যবহার করে একটি কোডে প্রি-কন্ডিশন চেক করুন।  

---

#### **৭. ডার্ট ইসোলেটস (Isolates)**  
31. একটি `Isolate` তৈরি করুন যা একটি বড় সংখ্যার গুনফল হিসাব করবে।  
32. একটি `ReceivePort` এবং `SendPort` ব্যবহার করে দুই `Isolate` এর মধ্যে ডেটা শেয়ার করুন।  
33. একটি ভারী ডেটা প্রসেসিং টাস্ক `Isolate`-এ পাঠান।  
34. একটি টাইমার ব্যবহার করে `Isolate` থেকে বারবার ডেটা পাঠান।  
35. একটি `Future` ব্যবহার করে `Isolate` থেকে ডেটা রিটার্ন করুন।  

---

#### **৮. মেটাডেটা ও অ্যানোটেশন (Metadata & Annotations)**  
36. একটি কাস্টম অ্যানোটেশন তৈরি করুন যা ক্লাসের মেটাডেটা হিসাবে কাজ করবে।  
37. `@override` ব্যবহার করে একটি মেথড পরিবর্তন করুন।  
38. একটি ক্লাসে `@deprecated` ব্যবহার করে একটি মেথড ডিক্লেয়ার করুন।  
39. একটি ফাংশনের জন্য কাস্টম মেটাডেটা যোগ করুন।  
40. একটি প্রোগ্রামে কাস্টম অ্যানোটেশন রিড করার জন্য রিফ্লেকশন ব্যবহার করুন।  

---

#### **৯. ল্যাজি ইভ্যালুয়েশন (Lazy Evaluation)**  
41. `late` ব্যবহার করে একটি ভেরিয়েবল ডিফার্ড ইনিশিয়ালাইজ করুন।  
42. একটি `Iterable` তৈরি করুন যা ডেটা লেজি লোড করবে।  
43. একটি প্রোগ্রামে `Iterator` ব্যবহার করে প্রতিটি আইটেম প্রিন্ট করুন।  
44. `generate()` ব্যবহার করে একটি ইনফিনিট লিস্ট তৈরি করুন।  
45. লিস্ট থেকে লেজি প্রসেসিং এর মাধ্যমে ডেটা ফিল্টার করুন।  

---

#### **১০. বিল্ট-ইন লাইব্রেরি ও টুলস**  
46. `dart:io` ব্যবহার করে একটি টেক্সট ফাইল তৈরি করুন।  
47. `dart:convert` ব্যবহার করে একটি JSON স্ট্রিং থেকে ডেটা প্রসেস করুন।  
48. `dart:async` ব্যবহার করে একটি `Stream` তৈরি করুন যা সেকেন্ড ধরে টিক দিবে।  
49. একটি প্রোগ্রামে XML প্রসেস করার জন্য একটি লাইব্রেরি ব্যবহার করুন।  
50. একটি কমান্ড লাইন টুল তৈরি করুন যা ফাইলের মধ্যে ডেটা সন্ধান করবে।  

---



এই তালিকা অনুসরণ করলে আপনার Dart প্রোগ্রামিং দক্ষতা অনেক ভালো হবে।
