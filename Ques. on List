নিচে **Dart List** নিয়ে কিছু **প্র্যাকটিস প্রশ্ন** দেওয়া হল, যা আপনাকে **List** সম্পর্কিত সমস্ত গুরুত্বপূর্ণ বিষয় অনুশীলন করতে সাহায্য করবে। এই প্রশ্নগুলোতে **List** এর বিভিন্ন ফিচার, মেথড এবং কাজ করার উপায় থাকবে।

### **১. List তৈরি এবং এর ব্যবহার (Creating and Using Lists)**

1. **প্রশ্ন ১**: একটি `List` তৈরি করুন, যাতে ৫টি পূর্ণসংখ্যা থাকবে। তারপর সেগুলো প্রিন্ট করুন।
2. **প্রশ্ন ২**: একটি `List` তৈরি করুন, যাতে কিছু নাম (String) থাকবে, যেমন: `"Alice", "Bob", "Charlie"`। তারপর তালিকার প্রথম এবং শেষ উপাদান প্রিন্ট করুন।
3. **প্রশ্ন ৩**: একটি `List` তৈরি করুন, যাতে মিশ্র ডেটা (int, String, double) থাকবে। তারপর প্রতিটি উপাদান প্রিন্ট করুন।

### **২. List এর উপাদান অ্যাক্সেস (Accessing List Elements)**

1. **প্রশ্ন ৪**: একটি `List` তৈরি করুন, এতে ১০টি পূর্ণসংখ্যা থাকবে। তারপর `List` এর ৩য় এবং ৭ম উপাদান প্রিন্ট করুন।
2. **প্রশ্ন ৫**: একটি `List` তৈরি করুন, যাতে নামগুলোর তালিকা থাকবে। এরপর তালিকার ৪র্থ নামটি প্রিন্ট করুন।

### **৩. List এ উপাদান যোগ করা (Adding Elements to List)**

1. **প্রশ্ন ৬**: একটি `List` তৈরি করুন, তারপর `add()` মেথড ব্যবহার করে তালিকায় একটি নতুন উপাদান যোগ করুন।
2. **প্রশ্ন ৭**: একটি `List` তৈরি করুন, তারপর `addAll()` মেথড ব্যবহার করে অন্য একটি `List` এর সব উপাদান যোগ করুন।

### **৪. List থেকে উপাদান মুছে ফেলা (Removing Elements from List)**

1. **প্রশ্ন ৮**: একটি `List` তৈরি করুন, তারপর `remove()` মেথড ব্যবহার করে একটি উপাদান মুছে ফেলুন।
2. **প্রশ্ন ৯**: একটি `List` তৈরি করুন, এরপর `removeAt()` মেথড ব্যবহার করে একটি নির্দিষ্ট ইনডেক্স থেকে উপাদান মুছে ফেলুন।
3. **প্রশ্ন ১০**: একটি `List` তৈরি করুন, এরপর `clear()` মেথড ব্যবহার করে পুরো `List` ফাঁকা করুন।

### **৫. List এর length এবং check (Length and Checking)**

1. **প্রশ্ন ১১**: একটি `List` তৈরি করুন এবং তারপর `length` প্রপার্টি ব্যবহার করে তার দৈর্ঘ্য প্রিন্ট করুন।
2. **প্রশ্ন ১২**: একটি `List` তৈরি করুন এবং চেক করুন তালিকায় একটি নির্দিষ্ট উপাদান আছে কি না `contains()` মেথড ব্যবহার করে।

### **৬. List Sort এবং Reverse (Sorting and Reversing Lists)**

1. **প্রশ্ন ১৩**: একটি `List` তৈরি করুন, তারপর `sort()` মেথড ব্যবহার করে তালিকাটি সাজিয়ে ফেলুন।
2. **প্রশ্ন ১৪**: একটি `List` তৈরি করুন, তারপর `reversed` প্রপার্টি ব্যবহার করে তালিকাটি উল্টে ফেলুন।

### **৭. List এর মধ্যে নির্দিষ্ট মান খোঁজা (Finding Specific Values in List)**

1. **প্রশ্ন ১৫**: একটি `List` তৈরি করুন, তারপর `indexOf()` মেথড ব্যবহার করে একটি নির্দিষ্ট উপাদানের ইনডেক্স খুঁজে বের করুন।
2. **প্রশ্ন ১৬**: একটি `List` তৈরি করুন, তারপর `lastIndexOf()` মেথড ব্যবহার করে তালিকায় একটি উপাদানের সর্বশেষ ইনডেক্স খুঁজে বের করুন।

### **৮. List মেথড ব্যবহার (Using List Methods)**

1. **প্রশ্ন ১৭**: একটি `List` তৈরি করুন, তারপর `insert()` মেথড ব্যবহার করে একটি নির্দিষ্ট ইনডেক্সে একটি উপাদান ইনসার্ট করুন।
2. **প্রশ্ন ১৮**: একটি `List` তৈরি করুন, তারপর `insertAll()` মেথড ব্যবহার করে অন্য একটি `List` এর সব উপাদান নির্দিষ্ট ইনডেক্সে ইনসার্ট করুন।

### **৯. List এর উপাদানকে Filter এবং Map করা (Filtering and Mapping List Elements)**

1. **প্রশ্ন ১৯**: একটি `List` তৈরি করুন, তারপর `where()` মেথড ব্যবহার করে এমন উপাদান বের করুন যেগুলোর মান ১০ এর বেশি।
2. **প্রশ্ন ২০**: একটি `List` তৈরি করুন, তারপর `map()` মেথড ব্যবহার করে সব উপাদানের ওপর একটি ফাংশন প্রয়োগ করুন (যেমন: প্রতিটি উপাদান ২ দ্বারা গুণ করা)।

### **১০. List.reduce() এবং List.fold() ব্যবহার (Using reduce() and fold())**

1. **প্রশ্ন ২১**: একটি `List` তৈরি করুন, তারপর `reduce()` মেথড ব্যবহার করে সব উপাদান যোগ করুন।
2. **প্রশ্ন ২২**: একটি `List` তৈরি করুন, তারপর `fold()` মেথড ব্যবহার করে তালিকার সব উপাদান যোগ করুন, এবং প্রাথমিক মান হিসেবে ০ ব্যবহার করুন।

### **১১. List-এর মধ্যে এগুলোর সমন্বয় (Combining Lists)**

1. **প্রশ্ন ২৩**: দুটি `List` তৈরি করুন, তারপর `+` অপারেটর ব্যবহার করে দুটি `List` একত্রিত করুন।
2. **প্রশ্ন ২৪**: দুটি `List` তৈরি করুন, তারপর `addAll()` মেথড ব্যবহার করে দ্বিতীয় `List` প্রথম `List` এর সাথে যুক্ত করুন।

---

### **প্র্যাকটিসের সুবিধা**:
- এই প্রশ্নগুলোর মাধ্যমে আপনি **List** এর প্রায় সব ধরনের কাজ এবং মেথড সম্পর্কে ধারণা পাবেন।
- **List** এর উপাদান যোগ, মুছে ফেলা, খোঁজা, ফিল্টার, ম্যাপ, এবং বিভিন্ন ফিচার অনুশীলন করা যাবে।
- এগুলো আপনার **Dart List** এর দক্ষতা বৃদ্ধি করতে সহায়ক হবে।

**এখনই এসব প্রশ্নের উত্তর দেওয়া শুরু করুন এবং Dart List সম্পর্কে আরও ভালো ধারণা অর্জন করুন!**
